/* (C) Kengo TODA 2021 */
package jp.skypencil.flix

import de.undercouch.gradle.tasks.download.Download
import java.util.*
import org.gradle.api.Plugin
import org.gradle.api.Project

/**
 * The base plugin which provides tasks and an extension for Flix projects.
 *
 * This plugin is useful to build Flix projects which does not follow the Gradle standard directory
 * layout. Such directory layout is common in the project generated by `flix init` command.
 *
 * @since 1.0
 */
class FlixBasePlugin : Plugin<Project> {
  override fun apply(project: Project) {
    project.plugins.apply("java-base")

    val extension = project.extensions.create("flix", FlixExtension::class.java)
    extension.apply {
      sourceSets = project.objects.domainObjectContainer(FlixSourceSet::class.java)
    }

    val src = "https://github.com/flix/flix/releases/download/${COMPILER_VERSION}/flix.jar"
    val dest = project.buildDir.resolve("flix/${COMPILER_VERSION}/flix.jar")
    val downloadFlixCompiler =
        project.tasks.register(DOWNLOAD_COMPILER_TASK_NAME, Download::class.java) { it ->
          it.src(src)
          it.dest(dest)
        }
    project.tasks.withType(FlixCompile::class.java) {
      it.classpath = project.files(dest).builtBy(downloadFlixCompiler)
    }
    project.tasks.withType(FlixTest::class.java) {
      it.classpath = project.files(dest).builtBy(downloadFlixCompiler)
    }
    val flixCompiler = project.configurations.create(CONFIGURATION_FOR_COMPILER)
    flixCompiler.defaultDependencies { dependencySet ->
      val dependency = project.dependencies.create(project.files(dest))
      dependencySet.add(dependency)
    }
  }

  companion object {
    const val CONFIGURATION_FOR_COMPILER = "flixCompiler"
    const val DOWNLOAD_COMPILER_TASK_NAME = "downloadFlixCompiler"
    const val COMPILER_VERSION = "v0.25.0"
  }
}
